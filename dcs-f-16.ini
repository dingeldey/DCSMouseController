; ----------------------------------------------------------------------
; OUTPUT TYPES
; ----------------------------------------------------------------------

; Keys:
;   A, F1, Shift+F12, Ctrl+Alt+Del, Win+R, 0–9, etc.
;   Modes:
;     A                  → default short press (30 ms)
;     A:single           → explicit short press (30 ms)
;     A:single:100       → short press with 100 ms hold
;     A:hold             → press on input down, release on input up
;     A:toggle           → toggle key on/off each press
;   Examples:
;     dev:0:button:1 => A
;     dev:0:button:2 => Ctrl+Shift+A:hold
;     dev:0:button:3 => F5:single:200

; Mouse buttons:
;   MB1 (Left), MB2 (Right), MB3 (Middle), MB4 (X1), MB5 (X2)
;   Modes:
;     MB1                → short click (30 ms)
;     MB1:single         → same as above
;     MB1:single:50      → click held for 50 ms
;     MB1:hold           → stays pressed until release
;     MB1:toggle         → toggles down/up with each press
;   Examples:
;     dev:0:button:4 => MB1
;     dev:0:button:5 => MB2:hold
;     dev:0:button:6 => MB3:single:75

; Mouse wheel:
;   WheelUp, WheelDown
;   Modes:
;     WheelUp            → one tick
;     WheelUp:single     → same as above
;     WheelUp:hold:5:30:1000
;         init=5 ticks/sec, max=30 ticks/sec, ramp in 1000 ms
;   Examples:
;     dev:0:button:7 => WheelUp
;     dev:0:button:8 => WheelDown:hold:2:20:500

; Mouse axes:
;   mouse_x, mouse_y (only valid with analog axis inputs)
;   Example:
;     dev:0:axis:0 => mouse_x
;     dev:0:axis:1 => mouse_y

; CenterMouse:
;   CenterMouse:<targetType>:<targetName>:<frac|px>:[<coords>]
;     targetType = Virtual | Monitor | WindowClass | WindowName
;     targetName = monitor index (for Monitor), or class/title string
;     coords     = [x,y] as fractions (0.0–1.0) or pixels "px"
;   Examples:
;     dev:0:button:9  => CenterMouse:Virtual:frac:[0.5,0.5]
;     dev:0:button:10 => CenterMouse:Monitor:1:frac:[0.25,0.75]
;     dev:0:button:11 => CenterMouse:WindowClass:Notepad:px:[100,200]
;     dev:0:button:12 => CenterMouse:WindowName:FalconDisplay:frac;[0.5,0.5]

; WiggleMouse:
;   WiggleMouse:<mode>:<pixels>:<ms>
;     mode   = relative | absolute
;     pixels = amplitude in px
;     ms     = period of wiggle
;   Modes: always :toggle (press once = start, press again = stop)
;   Examples:
;     dev:0:button:13 => WiggleMouse:relative:5:2000
;     dev:0:button:14 => WiggleMouse:absolute:20:1000

; FocusWindow:
;   FocusWindow:<targetType>:<targetName>
;     targetType = WindowClass | WindowName
;     targetName = string to match
;   Example:
;     dev:0:button:15 => FocusWindow:WindowName:Notepad
;     dev:0:button:16 => FocusWindow:WindowClass:FalconDisplay

; MouseInc / MouseDec (continuous cursor nudge):
;   MouseInc:<axis>:<mode>:hold:<init>:<max>:<ms>
;   MouseDec:<axis>:<mode>:hold:<init>:<max>:<ms>
;     axis  = x | y
;     mode  = relative | absolute
;     init  = ticks per second at start
;     max   = max ticks per second
;     ms    = time in ms to reach max
;   Example:
;     dev:0:button:17 => MouseInc:x:relative:hold:5:30:1000
;     dev:0:button:18 => MouseDec:y:absolute:hold:10:40:1500

; ----------------------------------------------------------------------
; OUTPUT MODES (summary)
; ----------------------------------------------------------------------
; :single       → fires once on press (default, 30 ms)
; :single:<ms>  → fires once with custom press duration
; :hold         → stays pressed while input is held, releases on release
; :toggle       → toggles on/off (works for keys, mouse buttons, wiggle)

; ----------------------------------------------------------------------
; EXTENSIVE EXAMPLES
; ----------------------------------------------------------------------
; key_mappings = \
;     dev:0:button:1  => A, \
;     dev:0:button:2  => B:single:100, \
;     dev:0:button:3  => C:hold, \
;     dev:0:button:4  => MB1:single, \
;     dev:0:button:5  => MB2:single:75, \
;     dev:0:button:6  => MB3:hold, \
;     dev:0:button:7  => MB4:toggle, \
;     dev:0:button:8  => WheelUp:hold:5:30:1000, \
;     dev:0:button:9  => WheelDown:single, \
;     dev:0:button:10 => CenterMouse:Virtual:[0.5,0.5], \
;     dev:0:button:11 => CenterMouse:Monitor:1:[0.25,0.75], \
;     dev:0:button:12 => CenterMouse:WindowClass:Notepad:px:[200,200], \
;     dev:0:button:12 => CenterMouse:WindowClass:Notepad:frac:[0.2,0.2], \
;     dev:0:button:12 => CenterMouse:WindowName:Notepad:frac:[0.2,0.2], \
;     dev:0:button:13 => WiggleMouse:relative:5:2000, \
;     dev:0:button:14 => WiggleMouse:absolute:20:1500, \
;     dev:0:button:15 => FocusWindow:WindowName:Notepad, \
;     dev:0:button:16 => FocusWindow:WindowClass:FalconDisplay, \
;     dev:0:button:17 => MouseInc:x:relative:hold:5:30:1000, \
;     dev:0:button:18 => MouseDec:y:absolute:hold:10:40:1500
;
; axis_mappings = \
;     dev:0:axis:0 => mouse_x, \
;     dev:0:axis:1 => mouse_y


[input]
wiggle_initially_on  = false:10:500
modifier = dev:0:button:8

; Key bindings (list form)
; key maps with per-binding modes

; Keys are applied from bottom to top
key_mappings =  dev:0300e98998400000a8be000000000000:button:26 => WiggleMouse:relative:1:3500, \
                dev:0300e98998400000a8be000000000000:button:26 => CenterMouse:Monitor:2:frac:[0.5,0.53], \
                dev:0300e98998400000a8be000000000000:button:26 => FocusWindow:WindowClass:DCS, \
                dev:030019c69840000068be000000000000:button:19 => MB1:hold, \
                dev:030019c69840000068be000000000000:button:21 => MB2:hold, \
                dev:030019c69840000068be000000000000:button:22 => WheelDown:hold:1:30:1000, \
                dev:030019c69840000068be000000000000:button:20 => WheelUp:hold:1:30:1000, \

; Axis bindings (list form);
; Axis steering mode: "relative" (default) or "absolute"
axis_mode = relative
; --- Axis movement acceleration ---; Axis deadzone
axis_deadzone = 0.025
axis_speed      = 1000

axis_mappings = \
                dev:0300e98998400000a8be000000000000:axis:2 => mouse_x, \
                dev:0300e98998400000a8be000000000000:axis:3 => mouse_y


; Debugging
debug_inputs = false   ; global debug (overrides others if true)
log_buttons  = false    ; log button press/release
log_axes     = false   ; log axis values when applied (not every poll)
