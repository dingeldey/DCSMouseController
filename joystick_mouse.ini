[input]
; ======================================================================
; Device selection is PER-BINDING via devIdx:<index> or dev:<GUID>.
; There is NO global primary device in this INI.
; Find GUIDs and indices in the program's startup printout.
; Pick a different INI at launch:  DCSMouseController.exe --config myprofile.ini
; ======================================================================


; --- Global modifier (advanced; required if you use 'M' in bindings) ---
; Choose device by index or GUID, and the 1-based button number:
;   modifier = devIdx:1:button:6
;   modifier = dev:03000000b50700001572000011010000:button:6
modifier = dev:0:button:1

; ── Binding syntax (works for ALL entries below) ───────────────────────
; Button:             devIdx:<dev>:button:<btn>[M]   OR   dev:<GUID>:button:<btn>[M]
; Axis-as-button:     devIdx:<dev>:axis:<axis>:<pos|neg|abs>:<thr>[M]
;                     dev:<GUID>:axis:<axis>:<pos|neg|abs>:<thr>[M]
; Analog axis (X/Y):  devIdx:<dev>:axis:<axis>[M]    OR   dev:<GUID>:axis:<axis>[M]
; (Legacy numeric-only entries still parse using internal default device 0,
;  but it's recommended to specify devices explicitly.)

; --- Toggle (OFF binding removed; toggle handles both states) ---
; Examples:
;   button_toggle = devIdx:0:button:5
;   button_toggle = devIdx:0:axis:2:pos:0.60M
button_toggle = devIdx:0:button:5

; --- Movement nudges (mix devices if you like) ---
button_inc_x = devIdx:0:button:12M
button_dec_x = devIdx:0:button:11M
button_inc_y = devIdx:0:button:9M
button_dec_y = devIdx:0:button:10M
; Or axis-threshold style (examples):
; button_inc_y = dev:03000000b50700001572000011010000:axis:2:neg:0.50M
; button_dec_y = dev:03000000b50700001572000011010000:axis:2:pos:0.50

nudge_velocity_px_s = 4000
wiggle_one_pixel = true

; --- Analog cursor movement (axes; may come from different device) ---
; GUID form (examples):
; axis_x = dev:03000000b50700001572000011010000:axis:0M
; axis_y = dev:03000000b50700001572000011010000:axis:1M
axis_x = devIdx:0:axis:0M
axis_y = devIdx:0:axis:1M

; Axes configurations deadzones and invert
axis_deadzone_x = 0.01
axis_deadzone_y = 0.01
axis_invert_x = false
axis_invert_y = false
axis_velocity_px_s = 800
axis_button_hysteresis = 0.10

; --- Mouse buttons & wheel (buttons or axis-thresholds; mix devices) ---
button_mouse_left  = devIdx:0:button:2
button_mouse_right = devIdx:0:button:4
; Wheel by buttons (hold to scroll) OR by axis-threshold:
button_wheel_up   = devIdx:0:button:8
button_wheel_down = devIdx:0:button:7
; Examples using GUID + axis threshold:
; button_wheel_up   = dev:03000000b50700001572000011010000:axis:5:pos:0.60
; button_wheel_down = dev:03000000b50700001572000011010000:axis:5:neg:0.60
wheel_ticks_per_second = 30

; --- Monitor & target ---
monitor_index = 1
x_frac = 0.5
y_frac = 0.5
x = 1280
y = 720

; --- Loop / timing ---
repeat_ms = 3500
poll_hz = 250
startup_grace_ms = 200

; --- Windows path ---
use_sendinput = true

; --- Clamp area ---
clamp_space = virtual       ; monitor | virtual

; --- Behavior / debug ---
toggle_feedback = false
log_apply = false
debug_buttons = false       ; prints 1-based button edges with dev index
debug_io = false            ; view monitored inputs & outputs

; Optional:
; restore_on_off = false
